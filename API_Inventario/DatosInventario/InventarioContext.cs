// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Dominio_Inventario.Modelos;
using Microsoft.EntityFrameworkCore;

namespace Datos_Inventario;

public partial class InventarioContext : DbContext
{
    public InventarioContext(DbContextOptions<InventarioContext> options)
        : base(options)
    {
    }

    public virtual DbSet<Credenciales> Credenciales { get; set; }

    public virtual DbSet<EstadosLotes> EstadosLotes { get; set; }

    public virtual DbSet<EstadosProductos> EstadosProductos { get; set; }

    public virtual DbSet<LotesProductos> LotesProductos { get; set; }

    public virtual DbSet<Productos> Productos { get; set; }

    public virtual DbSet<Usuarios> Usuarios { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<Credenciales>(entity =>
        {
            entity.HasKey(e => e.IdCredencial);

            entity.Property(e => e.Contrasenia)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);

            entity.HasOne(d => d.IdUsuarioNavigation).WithMany(p => p.Credenciales)
                .HasForeignKey(d => d.IdUsuario)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Credenciales_Usuarios");
        });

        modelBuilder.Entity<EstadosLotes>(entity =>
        {
            entity.HasKey(e => e.IdEstadoLote);

            entity.Property(e => e.Descripcion)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.Nombre)
                .HasMaxLength(30)
                .IsUnicode(false);
        });

        modelBuilder.Entity<EstadosProductos>(entity =>
        {
            entity.HasKey(e => e.IdEstadoProducto).HasName("PK_EstadoProducto");

            entity.Property(e => e.DescripcionEstado)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.NombreEstado)
                .HasMaxLength(30)
                .IsUnicode(false);
        });

        modelBuilder.Entity<LotesProductos>(entity =>
        {
            entity.HasKey(e => e.IdLote).HasName("PK_Lotes");

            entity.Property(e => e.CodigoLote)
                .IsRequired()
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.FechaActualizacion).HasColumnType("datetime");
            entity.Property(e => e.FechaCreacion).HasColumnType("datetime");
            entity.Property(e => e.FechaFabricacion).HasColumnType("datetime");
            entity.Property(e => e.FechaVencimiento).HasColumnType("datetime");
            entity.Property(e => e.Precio).HasColumnType("decimal(18, 0)");
            entity.Property(e => e.Stock).HasColumnType("decimal(18, 0)");

            entity.HasOne(d => d.IdEstadoLoteNavigation).WithMany(p => p.LotesProductos)
                .HasForeignKey(d => d.IdEstadoLote)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_LotesProductos_EstadosLotes");

            entity.HasOne(d => d.IdProductoNavigation).WithMany(p => p.LotesProductos)
                .HasForeignKey(d => d.IdProducto)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_LotesProductos_Productos");
        });

        modelBuilder.Entity<Productos>(entity =>
        {
            entity.HasKey(e => e.IdProducto).HasName("PK_Producto");

            entity.Property(e => e.Descripcion)
                .HasMaxLength(200)
                .IsUnicode(false);
            entity.Property(e => e.FechaActualizacion).HasColumnType("datetime");
            entity.Property(e => e.FechaCreacion).HasColumnType("datetime");
            entity.Property(e => e.Imagen)
                .HasMaxLength(300)
                .IsUnicode(false);
            entity.Property(e => e.Nombre)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);

            entity.HasOne(d => d.IdEstadoProductoNavigation).WithMany(p => p.Productos)
                .HasForeignKey(d => d.IdEstadoProducto)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Productos_EstadosProductos");
        });

        modelBuilder.Entity<Usuarios>(entity =>
        {
            entity.HasKey(e => e.IdUsuario);

            entity.Property(e => e.CorreoUsuario)
                .IsRequired()
                .HasMaxLength(60)
                .IsUnicode(false);
            entity.Property(e => e.NombreUsuario)
                .IsRequired()
                .HasMaxLength(30)
                .IsUnicode(false);
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}